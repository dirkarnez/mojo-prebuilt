name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: windows-2019
    env:
      libraryName: chromium
      installationPath: chromium-installation
      tagName: 111.0.5511.1
      msvcTargetZip: chromium-${{ github.ref_name }}-msvc2019.zip
    steps:
#      - name: git clone
#        shell: cmd
#        run: git clone --recursive https://github.com/chromium/chromium.git && cd chromium && git checkout -f  ${{ env.tagName }}
        
      - shell: cmd
        run: |
          curl https://storage.googleapis.com/chrome-infra/depot_tools.zip -L --output depot_tools.zip  &&^
          7z.exe x depot_tools.zip -o"depot_tools"
          
      - shell: cmd
        run: |
          curl https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip -L --output ninja-win.zip  &&^
          7z.exe x ninja-win.zip -o"ninja-win"
        
        
      - name: curl PortableGit-2.38.1-64-bit.7z.exe
        shell: cmd
        run: |
          curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L --output PortableGit-2.38.1-64-bit.7z.exe &&^
          dir &&^
          7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"
        
      - name: curl python-3.7.9-amd64-portable.zip
        shell: cmd
        run: |
          curl https://github.com/dirkarnez/python-portable/releases/download/v3.8.10/python-3.8.10-amd64-portable.zip -L --output python-3.8.10-amd64-portable.zip &&^
          dir &&^
          7z.exe x python-3.8.10-amd64-portable.zip -o"python-3.8.10-amd64-portable"
          
      - name: set PATH, check mingw version, cmake generate, build and install
        shell: cmd
        run: |
            echo %PATH%
            set DEPOT_TOOLS_WIN_TOOLCHAIN=0
            set PATH=^
            C:\Windows\System32\WindowsPowerShell\v1.0;^
            ${{ github.workspace }}\ninja-win;^
            ${{ github.workspace }}\depot_tools;^
            ${{ github.workspace }}\PortableGit-2.38.1-64-bit\bin;^
            ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;^
            ${{ github.workspace }}\python-3.8.10-amd64-portable;^
            ${{ github.workspace }}\python-3.8.10-amd64-portable\Scripts;^
            %PATH%
            git config --global user.name "John Doe" &&^
            git config --global user.email "jdoe@email.com" &&^
            git config --global core.autocrlf false &&^
            git config --global core.filemode false &&^
            git config --global branch.autosetuprebase always &&^
            gclient &&^
            cd /d C:\ &&^
            mkdir chromium && cd chromium &&^
            fetch --nohooks --no-history chromium &&^
            cd src &&^
            git fetch --tags &&^
            git checkout -b your_release_branch ${{ env.tagName }} &&^
            gn gen --args="is_debug=false target_cpu=\"x64\"" out/Default &&^
            autoninja -C out\Default chrome
            
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "C:/chromium/src/out/Default"
          filename: "${{ env.msvcTargetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "C:/chromium/src/out/Default/${{ env.msvcTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
